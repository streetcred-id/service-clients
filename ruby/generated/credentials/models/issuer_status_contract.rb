# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Credentials
  module Models
    #
    # Issuer Status contract
    #
    class IssuerStatusContract
      # @return [String] Transaction Author Agreement Text
      attr_accessor :acceptance_text

      # @return [String] Transaction Author Agreement version
      attr_accessor :acceptance_version

      # @return [String] The acceptance digest
      attr_accessor :acceptance_digest

      # @return [Integer] The acceptance time
      attr_accessor :acceptance_time

      # @return [Boolean] Indicates if user needs to accept the latest
      # agreement on the network
      attr_accessor :require_acceptance

      # @return [Enum] Possible values include: 'Shared', 'Dedicated',
      # 'Delegated'
      attr_accessor :transaction_endorsement

      # @return [Boolean] Indicates if the user has Endorser status
      attr_accessor :issuer_can_endorse


      #
      # Mapper for IssuerStatusContract class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'IssuerStatusContract',
          type: {
            name: 'Composite',
            class_name: 'IssuerStatusContract',
            model_properties: {
              acceptance_text: {
                client_side_validation: true,
                required: false,
                serialized_name: 'acceptanceText',
                type: {
                  name: 'String'
                }
              },
              acceptance_version: {
                client_side_validation: true,
                required: false,
                serialized_name: 'acceptanceVersion',
                type: {
                  name: 'String'
                }
              },
              acceptance_digest: {
                client_side_validation: true,
                required: false,
                serialized_name: 'acceptanceDigest',
                type: {
                  name: 'String'
                }
              },
              acceptance_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'acceptanceTime',
                type: {
                  name: 'Number'
                }
              },
              require_acceptance: {
                client_side_validation: true,
                required: false,
                serialized_name: 'requireAcceptance',
                type: {
                  name: 'Boolean'
                }
              },
              transaction_endorsement: {
                client_side_validation: true,
                required: false,
                serialized_name: 'transactionEndorsement',
                type: {
                  name: 'String'
                }
              },
              issuer_can_endorse: {
                client_side_validation: true,
                required: false,
                serialized_name: 'issuerCanEndorse',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
