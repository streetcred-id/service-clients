# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Credentials
  module Models
    #
    # Model object.
    #
    #
    class VerificationContract
      # @return [String]
      attr_accessor :connection_id

      # @return [String]
      attr_accessor :verification_id

      # @return [String]
      attr_accessor :definition_id

      # @return [Enum] Possible values include: 'Proposed', 'Requested',
      # 'Accepted', 'Rejected'
      attr_accessor :state

      # @return [DateTime]
      attr_accessor :created_at_utc

      # @return [DateTime]
      attr_accessor :updated_at_utc

      # @return [Boolean]
      attr_accessor :is_valid

      # @return [DateTime]
      attr_accessor :verified_at_utc

      # @return [Hash{String => ProofAttributeContract}]
      attr_accessor :proof

      # @return [VerificationPolicyParameters]
      attr_accessor :policy

      # @return [ProofProposal]
      attr_accessor :proposal

      # @return [String]
      attr_accessor :verification_request_data

      # @return [String]
      attr_accessor :verification_request_url


      #
      # Mapper for VerificationContract class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'VerificationContract',
          type: {
            name: 'Composite',
            class_name: 'VerificationContract',
            model_properties: {
              connection_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connectionId',
                type: {
                  name: 'String'
                }
              },
              verification_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'verificationId',
                type: {
                  name: 'String'
                }
              },
              definition_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'definitionId',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              created_at_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'createdAtUtc',
                type: {
                  name: 'DateTime'
                }
              },
              updated_at_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'updatedAtUtc',
                type: {
                  name: 'DateTime'
                }
              },
              is_valid: {
                client_side_validation: true,
                required: false,
                serialized_name: 'isValid',
                type: {
                  name: 'Boolean'
                }
              },
              verified_at_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'verifiedAtUtc',
                type: {
                  name: 'DateTime'
                }
              },
              proof: {
                client_side_validation: true,
                required: false,
                serialized_name: 'proof',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ProofAttributeContractElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ProofAttributeContract'
                      }
                  }
                }
              },
              policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'policy',
                type: {
                  name: 'Composite',
                  class_name: 'VerificationPolicyParameters'
                }
              },
              proposal: {
                client_side_validation: true,
                required: false,
                serialized_name: 'proposal',
                type: {
                  name: 'Composite',
                  class_name: 'ProofProposal'
                }
              },
              verification_request_data: {
                client_side_validation: true,
                required: false,
                serialized_name: 'verificationRequestData',
                type: {
                  name: 'String'
                }
              },
              verification_request_url: {
                client_side_validation: true,
                required: false,
                serialized_name: 'verificationRequestUrl',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
