# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - openapi
pr: none

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorMinorPackageVersion: 1.1

jobs:

- job: Nuget
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.100'

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest@latest'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/wallet.json --csharp --output-folder=csharp/Generated --namespace=Trinsic.ServiceClients --add-credentials --override-client-name=WalletServiceClient'
  
  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/credentials.json --csharp --output-folder=csharp/Generated --namespace=Trinsic.ServiceClients --add-credentials --override-client-name=CredentialsServiceClient'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/provider.json --csharp --output-folder=csharp/Generated --namespace=Trinsic.ServiceClients --add-credentials --override-client-name=ProviderServiceClient'

  - task: NuGetToolInstaller@1

  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      projects: 'csharp/**/*.csproj'
      custom: 'pack'
      arguments: '/p:PackageVersion=$(majorMinorPackageVersion).$(Build.BuildId) /p:Configuration=$(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'nuget'
      publishLocation: 'Container'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'csharp'
      ArtifactName: 'nuget-sources'
      publishLocation: 'Container'

- job: Npm
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest@latest'
      
  - task: Npm@1
    inputs:
      command: 'custom'
      workingDir: 'typescript'
      customCommand: 'version $(majorMinorPackageVersion).$(Build.BuildId)'
  
  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/credentials.json --typescript --output-folder=typescript --add-credentials --override-client-name=CredentialsServiceClient --source-code-folder-path=src/credentials --custom-service-client-options=[baseUri=''https://api.trinsic.id/'']'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/wallet.json --typescript --output-folder=typescript --add-credentials --override-client-name=WalletServiceClient --source-code-folder-path=src/wallet --custom-service-client-options=[baseUri=''https://api.trinsic.id/'']'
     
  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/provider.json --typescript --output-folder=typescript --add-credentials --override-client-name=ProviderServiceClient --source-code-folder-path=src/provider --custom-service-client-options=[baseUri=''https://api.trinsic.id/'']'
  
  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: 'typescript'

  - task: Npm@1
    inputs:
      command: 'custom'
      workingDir: 'typescript'
      customCommand: 'run build'
      
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'typescript'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'npm'
      publishLocation: 'Container'

- job: Python
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip && pip install wheel
      displayName: 'Install dependencies'

    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'install -g autorest@latest'

    - task: CmdLine@2
      inputs:
        script: 'autorest --python --add-credentials=true --input-file=openapi/credentials.json --output-folder=python/package/trinsic/service_clients --override-client-name=CredentialsClient --package-name=trinsic.service_clients.credentials --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'

    - task: CmdLine@2
      inputs:
        script: 'autorest --python --add-credentials=true --input-file=openapi/wallet.json --output-folder=python/package/trinsic/service_clients --override-client-name=WalletClient --package-name=trinsic.service_clients.wallet --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'

    - task: CmdLine@2
      inputs:
        script: 'autorest --python --add-credentials=true --input-file=openapi/provider.json --output-folder=python/package/trinsic/service_clients --override-client-name=ProviderClient --package-name=trinsic.service_clients.provider --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'

    - task: CmdLine@2
      inputs:
        script: 'sed -i "s/credentials_property/credentials/g" python/package/trinsic/service_clients/credentials/credentials_client.py'
    
    - task: CmdLine@2
      inputs:
        script: 'sed -i "s/version_number/$(majorMinorPackageVersion).$(Build.BuildId)/g" python/package/setup.py'

    - script: |
        cd python/package && python setup.py sdist bdist_wheel && cd ../..
      displayName: 'Artifact creation'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'python/package/dist'
        Contents: '**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'python'
        publishLocation: 'Container'

- job: Ruby
  pool:
    vmImage: 'windows-latest'

  steps:
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'install -g autorest@latest'
      displayName: 'Install autorest'

    - task: CmdLine@2
      displayName: 'Generate CredentialsClient'
      inputs:
        script: 'autorest --ruby --add-credentials=true --input-file=openapi/credentials.json --output-folder=ruby/gem/lib/ --override-client-name=CredentialsClient --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'

    - task: CmdLine@2
      displayName: 'Generate WalletClient'
      inputs:
        script: 'autorest --ruby --add-credentials=true --input-file=openapi/wallet.json --output-folder=ruby/gem/lib/ --override-client-name=WalletClient --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'

    - task: CmdLine@2
      displayName: 'Generate ProviderClient'
      inputs:
        script: 'autorest --ruby --add-credentials=true --input-file=openapi/provider.json --output-folder=ruby/gem/lib/ --override-client-name=ProviderClient --package-version=$(majorMinorPackageVersion).$(Build.BuildId)'
    
    - task: CmdLine@2
      displayName: 'Increment package version number'
      inputs:
        script: 'sed -i "s/0\.0\.0/$(majorMinorPackageVersion).$(Build.BuildId)/g" ruby/gem/trinsic_service_clients.gemspec'

    - script: |
        cd ruby/gem && gem build trinsic_service_clients.gemspec cd ../..
      displayName: 'Build gem'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'ruby/gem'
        Contents: 'trinsic_service_clients-$(majorMinorPackageVersion).$(Build.BuildId).gem'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'ruby'
        publishLocation: 'Container'