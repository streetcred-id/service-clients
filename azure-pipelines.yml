# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - openapi
pr: none

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorMinorPackageVersion: 1.1

jobs:
- job: Nuget_Production
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '2.2.401'
      
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force
        npm install --global --production npm-windows-upgrade
        npm-windows-upgrade --npm-version latest

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/agency.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=AgencyServiceClient'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/cloud.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=CloudServiceClient'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/custodian.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=CustodianServiceClient'

  - task: NuGetToolInstaller@1

  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      projects: 'csharp/**/*.csproj'
      custom: 'pack'
      arguments: '/p:PackageVersion=$(majorMinorPackageVersion).$(Build.BuildId) /p:Configuration=$(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/production'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/production'
      ArtifactName: 'nuget-production'
      publishLocation: 'Container'

- job: Nuget_Staging
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '2.2.401'
      
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force
        npm install --global --production npm-windows-upgrade
        npm-windows-upgrade --npm-version latest

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/agency-staging.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=AgencyServiceClient'

  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/cloud-staging.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=CloudServiceClient'
 
  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/custodian-staging.json --csharp --output-folder=csharp/Generated --namespace=Streetcred.ServiceClients --add-credentials --override-client-name=CustodianServiceClient'

  - task: NuGetToolInstaller@1

  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      projects: 'csharp/**/*.csproj'
      custom: 'pack'
      arguments: '/p:PackageVersion=$(majorMinorPackageVersion).$(Build.BuildId)-staging /p:Configuration=$(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/staging'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/staging'
      ArtifactName: 'nuget-staging'
      publishLocation: 'Container'

- job: Npm
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest'
      
  - task: Npm@1
    inputs:
      command: 'custom'
      workingDir: 'typescript'
      customCommand: 'version $(majorMinorPackageVersion).$(Build.BuildId)'
  
  - task: CmdLine@2
    inputs:
      script: 'autorest --input-file=openapi/agency.json --typescript --output-folder=typescript --add-credentials --override-client-name=AgencyServiceClient --custom-service-client-options=[baseUri=''https://api.streetcred.id/'']'

  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: 'typescript'

  - task: Npm@1
    inputs:
      command: 'custom'
      workingDir: 'typescript'
      customCommand: 'run build'
      
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'typescript'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'npm'
      publishLocation: 'Container'